@charset "UTF-8";
/**
  Нормализация блочной модели
 */
/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**  моя нормализация */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: auto;
  width: 100%;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

body {
  position: relative;
}

img {
  width: 100%;
  height: 100%;
  display: block;
  max-width: 100%;
}

ul {
  list-style: none;
}

a,
input {
  font-size: inherit;
  color: inherit;
  background: inherit;
  text-decoration: none;
}

table {
  border-spacing: 0;
  border-collapse: collapse;
  margin: 0;
  padding: 0;
}

td,
th {
  vertical-align: top;
  word-wrap: break-word;
}

/*моя нормализация*/
/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  /**
    Унифицированный интерлиньяж
   */
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --font-family-base: sans-serif;
  --container-width: 1240px;
  --container-padding-x: 20px;
}

@font-face {
  font-display: swap;
}
.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media screen and (max-width: 1000px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media screen and (min-width: 1000px) {
  .visible-mobile {
    display: none !important;
  }
}

.font-weight:hover {
  text-shadow: -0.15px -0.15px 0 var(--color-main-whiter), 0.15px -0.15px 0 var(--color-main-whiter), -0.15px 0.15px 0 var(--color-main-whiter), 0.15px 0.15px 0 var(--color-main-whiter);
  transition: all var(--transition-duration);
}

:root {
  --font-family-base: sans-serif;
  --container-width: 1240px;
  --container-padding-x: 20px;
}

body {
  font-family: var(--font-family-base);
  line-height: 1.28;
}

.lock {
  overflow: hidden;
  height: 100%;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

@media (max-width: 1280px) {
  h2 {
    font-size: clamp(24px, 3.4722222222vw, 50px);
  }
}

@media (max-width: 1280px) {
  h3 {
    font-size: clamp(24px, 3.4722222222vw, 50px);
  }
}

@media (max-width: 1280px) {
  h4 {
    font-size: clamp(24px, 3.4722222222vw, 50px);
  }
}

h1 {
  font-size: clamp(10px, 4.665px + 1.667vw, 13px);
}/*# sourceMappingURL=style.css.map */